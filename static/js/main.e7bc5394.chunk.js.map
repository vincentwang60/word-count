{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","axios","post","fileData","type","lastModifiedDate","toDateString","onChange","this","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA8FeA,E,4MAzFbC,MAAQ,CAENC,aAAc,M,EAGhBC,aAAe,SAAAC,GAEb,EAAKC,SAAS,CACZH,aAAcE,EAAME,OAAOC,MAAM,M,EAIrCC,aAAe,WAEb,IAAMC,EAAW,IAAIC,SAErBD,EAASE,OACP,SACA,EAAKV,MAAMC,aACX,EAAKD,MAAMC,aAAaU,MAG1BC,QAAQC,IAAI,EAAKb,MAAMC,cAGvBa,IAAMC,KAAK,iBAAkBP,I,EAI/BQ,SAAW,WACT,OAAI,EAAKhB,MAAMC,aACJ,gCAEP,iDAFO,IAGmB,6CAExB,EAAKD,MAAMC,aAAaU,KAFA,OAHnB,IAMC,6CAEN,EAAKX,MAAMC,aAAagB,KAFlB,OAND,IASC,gDAGN,IAHM,IAKN,EAAKjB,MAAMC,aAAaiB,iBAAiBC,eALnC,UAaD,gCAEP,uBAEA,4EAJO,Q,4CAWb,WACE,OACE,gCACE,kDACA,gCACA,uBACMF,KAAO,OACbG,SACEC,KAAKnB,eAJP,IAMG,wBACIoB,QACLD,KAAKd,aAFJ,qBANH,OAFF,IAgBIc,KAAKL,kB,GAnFGO,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e7bc5394.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, {\r\n  Component\r\n} from 'react';\r\nclass App extends Component {\r\n  state = {\r\n    // Initially, no file is selected\r\n    selectedFile: null\r\n  };\r\n  // On file select (from the pop up)\r\n  onFileChange = event => {\r\n    // Update the state\r\n    this.setState({\r\n      selectedFile: event.target.files[0]\r\n    });\r\n  };\r\n  // On file upload (click the upload button)\r\n  onFileUpload = () => {\r\n    // Create an object of formData\r\n    const formData = new FormData();\r\n    // Update the formData object\r\n    formData.append(\r\n      \"myFile\",\r\n      this.state.selectedFile,\r\n      this.state.selectedFile.name\r\n    );\r\n    // Details of the uploaded file\r\n    console.log(this.state.selectedFile);\r\n    // Request made to the backend api\r\n    // Send formData object\r\n    axios.post(\"api/uploadfile\", formData);\r\n  };\r\n  // File content to be displayed after\r\n  // file upload is complete\r\n  fileData = () => {\r\n    if (this.state.selectedFile) {\r\n      return ( <\r\n        div >\r\n        <\r\n        h2 > File Details: < /h2> <\r\n        p > File Name: {\r\n          this.state.selectedFile.name\r\n        } < /p> <\r\n        p > File Type: {\r\n          this.state.selectedFile.type\r\n        } < /p> <\r\n        p >\r\n        Last Modified: {\r\n          \" \"\r\n        } {\r\n          this.state.selectedFile.lastModifiedDate.toDateString()\r\n        } <\r\n        /p>\r\n\r\n        <\r\n        /div>\r\n      );\r\n    } else {\r\n      return ( <\r\n        div >\r\n        <\r\n        br / >\r\n        <\r\n        h4 > Choose before Pressing the Upload button < /h4> <\r\n        /div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Amari chugs dick</h1>\r\n        <div>\r\n        <\r\n        input type = \"file\"\r\n        onChange = {\r\n          this.onFileChange\r\n        }\r\n        /> <\r\n        button onClick = {\r\n          this.onFileUpload\r\n        } >\r\n        Upload!\r\n        <\r\n        /button> <\r\n        /div> {\r\n          this.fileData()\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}